# Workflow Name
name: React Native CI/CD Workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # 🛠️ Lint & Test Job
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.9.0'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      - name: Run Prettier
        run: npm run format

      - name: Run ESLint
        run: npm run lint:fix

      # Debugging step
      - name: Debug CI Context
        run: |
          pwd
          ls -la android/

      - name: Send Discord Notification on Failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content": "🚨 CI/CD Build Failed! Error: Testing/Linting Failed!"}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Send Discord Notification on Success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content": "✅ Testing Passed"}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

  # 🚀 Deployment Job
  deploy:
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22.9.0'

      - name: Cache Node Modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Dependencies
        run: npm install

      # 🛠️ Restore Keystore File
      - name: Restore Keystore File
        run: |
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > android/app/my-upload-key.keystore
          ls -la android/app/ | grep keystore || echo "❌ Keystore Not Found!"

      # 🔑 Restore Google Play Credentials
      - name: Restore Play Store Credentials
        run: |
          mkdir -p android/fastlane
          echo "${{ secrets.PLAYSTORE_CREDENTIALS }}" | base64 --decode > android/fastlane/playstore-credentials.json
          ls -la android/fastlane/ | grep playstore-credentials.json || echo "❌ Play Store Credentials Not Found!"

      # 📜 Debugging Step (Ensure Files Exist)
      - name: Debug Files Before Build
        run: |
          pwd
          ls -la android/
          ls -la android/fastlane/
          ls -la android/app/
          cat android/fastlane/playstore-credentials.json || echo "❌ Credentials File Not Found!"
          cat android/app/my-upload-key.keystore || echo "❌ Keystore Not Found!"

      # 📦 Install Fastlane
      - name: Install Fastlane
        run: sudo gem install fastlane -NV

      # 🚀 Deploy to Google Play Store
      - name: Deploy to Google Play Store
        run: |
          cd android
          fastlane playstore

      - name: Send Discord Notification on Failure
        if: failure()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content": "🚨 Deployment Failed! Error: Fastlane Service Failed"}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}

      - name: Send Discord Notification on Success
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d '{"content": "✅ Deployed To Play Store 🎉!"}' \
               ${{ secrets.DISCORD_WEBHOOK_URL }}
